// Generated by CoffeeScript 1.7.1
var SubGraph;

SubGraph = {
  minYear: -1,
  maxYear: -1,
  radius: 5,
  x: null,
  y: null,
  rootG: null,
  init: function() {
    this.minYear = d3.min(years, function(d) {
      return d.no;
    });
    this.maxYear = d3.max(years, function(d) {
      return d.no;
    });
    this.rootG = d3.select(".subGraph");
    this.x = d3.scale.linear().domain([0, 1]).range([ColumnX.pol, ColumnX.food]);
    return this.y = d3.scale.linear().domain([this.minYear, this.maxYear]).range([barWidth / 2, barWidth / 2 + barWidth * (this.maxYear - this.minYear)]);
  },
  draw: function() {
    WordTable.clear();
    drawYearLines(axisCanvas, overlayCanvas, {
      pol: 0,
      his: 0,
      food: 0
    });
    d3.select(".svgContainer").style("height", "600px");
    this.addCaption(ColumnX.pol, "Subjective");
    this.addCaption(ColumnX.his, "Netural");
    this.addCaption(ColumnX.food, "Objective");
    this.drawLine("food");
    this.drawLine("his");
    this.drawLine("pol");
    return this.drawLine("news");
  },
  addCaption: function(x, text) {
    return this.rootG.append("text").attr("class", "subText").attr("x", x).attr("y", "-1em").text(text);
  },
  drawLine: function(name, className, acc) {
    var circles, data, group, line;
    if (className == null) {
      className = name;
    }
    if (acc == null) {
      acc = function(d) {
        return {
          value: d[name].obj,
          no: d.no
        };
      };
    }
    data = [];
    years.forEach(function(d) {
      if (name === "news" || d[name].kw.length !== 0) {
        return data.push(acc(d));
      }
    });
    group = SubGraph.rootG.append("g").attr("class", className);
    line = d3.svg.line().x(function(d) {
      return SubGraph.x(d.value);
    }).y(function(d) {
      return SubGraph.y(d.no);
    });
    group.append("path").datum(data).attr("d", line).attr("opacity", 0).transition().duration(1000).delay(axisTranstionTime * 2).attr("opacity", 1);
    circles = group.selectAll(".dot").data(data).enter().append("circle").attr("r", SubGraph.radius).attr("cx", function(d) {
      return SubGraph.x(d.value);
    }).attr("cy", function(d) {
      return SubGraph.y(d.no);
    });
    return circles.attr("opacity", 0).transition().duration(1000).delay(function(d) {
      return axisTranstionTime * 1.5;
    }).attr("opacity", 1);
  }
};
